DROP DATABASE IF EXISTS vinylD_db;
CREATE DATABASE vinylD_db;
USE vinylD_db;

DROP TABLE IF EXISTS users;
CREATE TABLE users (
  id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  email VARCHAR(80) NOT NULL,
  password VARCHAR(80) NOT NULL
);

DROP TABLE IF EXISTS albums;
CREATE TABLE albums (
  id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  title VARCHAR(80) NOT NULL,
  user_id INT NOT NULL,
  CONSTRAINT FK_album_userId FOREIGN KEY (user_id)
  REFERENCES users(id)
);

DROP TABLE IF EXISTS artists;
CREATE TABLE artists (
  id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  name VARCHAR(80) NOT NULL,
  user_id INT NOT NULL,
  CONSTRAINT FK_artist_userId FOREIGN KEY (user_id)
  REFERENCES users(id)
);

DROP TABLE IF EXISTS songs;
CREATE TABLE songs (
  id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  title VARCHAR(80) NOT NULL,
  user_id INT NOT NULL,
  CONSTRAINT FK_song_userId FOREIGN KEY (user_id)
  REFERENCES users(id)
);

DROP TABLE IF EXISTS notations;
CREATE TABLE notations (
  id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  body TEXT NOT NULL,
  album_id INT NOT NULL,
  artist_id INT NOT NULL,
  song_id INT NOT NULL,
  CONSTRAINT FK_notation_albumId FOREIGN KEY (album_id)
  REFERENCES albums(id) ON DELETE CASCADE,
  CONSTRAINT FK_notation_artistId FOREIGN KEY (artist_id)
  REFERENCES artists(id) ON DELETE CASCADE,
  CONSTRAINT FK_notation_songId FOREIGN KEY (song_id)
  REFERENCES songs(id) ON DELETE CASCADE
);

DROP TABLE IF EXISTS links;
CREATE TABLE links (
  id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
  url VARCHAR(120) NOT NULL,
  album_id INT NOT NULL,
  song_id INT NOT NULL,
  CONSTRAINT FK_link_albumId FOREIGN KEY (album_id)
  REFERENCES albums(id) ON DELETE CASCADE,
  CONSTRAINT FK_link_songId FOREIGN KEY (song_id)
  REFERENCES songs(id) ON DELETE CASCADE
);

